<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.zxcc.blog.*.dao.cache" />

    <bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <!-- 连连接池属性 -->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />

        <!-- 解决mysql 8小时问题 -->
        <property name="timeBetweenEvictionRunsMillis" value="28000"></property>

        <!--initialSize: 初始化连接数量 -->
        <property name="initialSize" value="${jdbc.initialSize}" />

        <!--maxActive: 最大连接数量。同一时间可以从池分配的最多连接数量。设置为0时表示无限制。-->
        <property name="maxActive" value="${jdbc.maxActive}" />

        <!-- 最大空闲值。池里不会被释放的最多空闲连接数量。设置为0时表示无限制。当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
        <property name="maxIdle" value="${jdbc.maxIdle}" />

        <!-- 最小空闲值。在不新建连接的条件下，池中保持空闲的最少连接数。当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
        <property name="minIdle" value="${jdbc.minIdle}" />

        <!-- 在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时） -->
        <property name="maxWait" value="${jdbc.maxWait}" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="datasource"/>
        <!-- 配置mybatis全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包，使用别名 -->
        <property name="typeAliasesPackage" value="com.zxcc.blog.user.entity"/>
        <!-- 扫描sql配置文件: mappers 需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
    </bean>

    <!-- 配置扫描dao接口宝，动态实现dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出要扫描的基础包 -->
        <property name="basePackage" value="com.zxcc.blog.*.dao"/>
    </bean>

</beans>